var LineBasedPlaneTrackingModule=function(e,n,t,r){"use strict";var o,a=function(e,n){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)};function l(e,n,t,r){var o,a=arguments.length,l=a<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,n,t,r);else for(var O=e.length-1;0<=O;O--)(o=e[O])&&(l=(a<3?o(l):3<a?o(n,t,l):o(n,t))||l);return 3<a&&l&&Object.defineProperty(n,t,l),l}(o=e.PlaneType||(e.PlaneType={}))["NONE"]="NONE",o["HORIZONTAL"]="HORIZONTAL",o["HORIZONTAL_FLOOR"]="HORIZONTAL_FLOOR",o["HORIZONTAL_CEILING"]="HORIZONTAL_CEILING",o["VERTICAL"]="VERTICAL",o["HORIZONTAL_OR_VERTICAL"]="HORIZONTAL_OR_VERTICAL";var O,A,i={NONE:0,HORIZONTAL:1,HORIZONTAL_FLOOR:2,HORIZONTAL_CEILING:3,VERTICAL:4,HORIZONTAL_OR_VERTICAL:5},T={0:e.PlaneType.NONE,1:e.PlaneType.HORIZONTAL,2:e.PlaneType.HORIZONTAL_FLOOR,3:e.PlaneType.HORIZONTAL_CEILING,4:e.PlaneType.VERTICAL,5:e.PlaneType.HORIZONTAL_OR_VERTICAL};(A=O=O||{})["TAP"]="TAP",A["PAN"]="PAN",A["PINCH"]="PINCH",A["ROTATE"]="ROTATE",A["LONG_PRESS"]="LONG_PRESS",A["RAW_TOUCH"]="RAW_TOUCH";var p,N;O.TAP,O.PAN,O.PINCH,O.ROTATE,O.LONG_PRESS,O.RAW_TOUCH;(N=p=p||{})["BEGAN"]="BEGAN",N["CHANGED"]="CHANGED",N["ENDED"]="ENDED",N["CANCELED"]="CANCELED",N["FAILED"]="FAILED";var E,c,P={BEGAN:0,CHANGED:1,ENDED:2,CANCELED:3,FAILED:4};p.BEGAN,p.CHANGED,p.ENDED,p.CANCELED,p.FAILED;(c=E=E||{})["RAY_CAST"]="RAY_CAST",c["SHADER_PICK"]="SHADER_PICK";E.RAY_CAST,E.SHADER_PICK;function R(e){return t.getCoreModule().mapStringToScalar(e,P,3)}var u=n.getNativeModule("LineBasedPlaneTracking"),L=(l([n.enumAccessor],I.prototype,"PlaneType",void 0),I=l([n.extension(r.SceneModule),n.capability("lineBasedPlaneTracking")],I));function I(){this.PlaneType=e.PlaneType}var y,f,C,_=(y=r.SceneObjectBase,a(f=H,C=y),f.prototype=null===C?Object.create(C):(s.prototype=C.prototype,new s),H.prototype.resetPlane=function(e,n,t){if("number"==typeof e||"number"==typeof n){if("number"!=typeof e||null==n||"number"!=typeof n)throw"Invalid parameter to resetPlane";u.resetPlane(e,n,t?i[t]:5)}else u.resetPlane(e.x,e.y,n?i[n]:5)},H.prototype.movePlane=function(e,n){if("number"==typeof e||"number"==typeof n){if("number"!=typeof e||null==n||"number"!=typeof n)throw"Invalid parameter to movePlane";u.movePlane(e,n)}else null==n?u.movePlane(e.x,e.y):u.movePlaneSignal(this.identifier,e,R(n))},H.prototype.removePlane=function(){u.removePlane()},Object.defineProperty(H.prototype,"planeType",{get:function(){return t.getCoreModule().mapScalarToString(u.getPlaneType(this.identifier),T,e.PlaneType.NONE)},enumerable:!0,configurable:!0}),H=l([r.sceneObject("linebasedplanetracker"),n.capability("lineBasedPlaneTracking")],H));function s(){this.constructor=f}function H(){return null!==y&&y.apply(this,arguments)||this}return e.LineBasedPlaneTracker=_,e.SceneModulePlanarTextExtension=L,e.toInternalGestureState=R,e}({},arfx,CoreModule,SceneModule);